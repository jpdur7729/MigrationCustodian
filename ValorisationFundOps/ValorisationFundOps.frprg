// ------------------------------------------------------------------------------
//                     Author    : eFront-BP2S
//                     Time-stamp: "2018-09-18 12:08:07 jpdur"
// ------------------------------------------------------------------------------


LIBNAME USER ".";

// Use the region as a parameter ==> Default region "Generic Region #4" with the max number of records
%PARAM REGION_IQID 	   LABEL="Region of Fund Investor" 		 INFORMAT="??PICKID(ADMROLE;NAME)" ;
%PARAM POSITION_DATE   LABEL="Position Date" 		 		 TYPE=DATE   DEFAULT="31/12/2017"  ;
// Default fund is "Fund 15140" in anonynised DB which is a FoF
%PARAM FUND_IQID 	   LABEL="Fund Investor"			  	 INFORMAT="??PICKID(VCFUND;FUND)"  ; // DEFAULT = "8816CE0D56FE49A59E8FAA6084BD12AB" ;

// Let's Add the USERID of the user who created the allocation
%LET USERID = GetUserInfo(GetUserID(),"IQID1");
    
// Create SQL       
%LET SQLQUERY = %SQLQUERY + " select fundinvestor.fund as Subscriber, ";
%LET SQLQUERY = %SQLQUERY + "        fund.fund as InvesteeFund,fund.currency1 as InvesteeCCY, ";
// %LET SQLQUERY = %SQLQUERY + "       '31-Dec-17' as TradeDate, ";
%LET SQLQUERY = %SQLQUERY + "       to_date('" & Format(%POSITION_DATE,"d/M/yyyy") &"','DD/MM/YYYY') as TradeDate, ";
%LET SQLQUERY = %SQLQUERY + "       fundinvestor.fund as InvestorFund,fundinvestor.currency1 as InvestorCCY, ";
%LET SQLQUERY = %SQLQUERY + "       fundinvestor.iqregionid as RegionIQID, ";
%LET SQLQUERY = %SQLQUERY + "       admrole.name as Region, ";
%LET SQLQUERY = %SQLQUERY + "       fshare.libelle as ShareClass, ";
%LET SQLQUERY = %SQLQUERY + "       10 as OpIndex, ";
%LET SQLQUERY = %SQLQUERY + "       'No' as Draft, ";
%LET SQLQUERY = %SQLQUERY + "       'IF: Official NAV' as Type, ";
%LET SQLQUERY = %SQLQUERY + "       'Yes' as ExcludeFromCash, ";
%LET SQLQUERY = %SQLQUERY + "       'Yes' as GLManualEntries, ";
%LET SQLQUERY = %SQLQUERY + "       fundinvestor.fund || ' Valorisation ' || TO_CHAR(to_date('" & Format(%POSITION_DATE,"d/M/yyyy") &"','DD/MM/YYYY'),'dd/MM/YYYY') as Description, ";
%LET SQLQUERY = %SQLQUERY + " 	    sum(coalesce(fopsha.bookvalue , 0.0)) as bookvalue, ";
%LET SQLQUERY = %SQLQUERY + "       sum(coalesce(fopsha.bookvalue1, 0.0)) as bookvalue1, ";
%LET SQLQUERY = %SQLQUERY + "       sum(coalesce(fopsha.bookvalue2, 0.0)) as bookvalue2, ";
%LET SQLQUERY = %SQLQUERY + "       case sum(coalesce(fopsha.bookvalue,0.0)) when 0 then 1 else sum(coalesce(fopsha.bookvalue2,0))/sum(coalesce(fopsha.bookvalue,0)) end as Exchange ";
%LET SQLQUERY = %SQLQUERY + "   from vcfundop            fundop, ";
%LET SQLQUERY = %SQLQUERY + "        vcsubscrfundopshare fopsha, ";
%LET SQLQUERY = %SQLQUERY + "        vcsubscriber        subs, ";
%LET SQLQUERY = %SQLQUERY + "        vcfundshare         fshare, ";
%LET SQLQUERY = %SQLQUERY + "        VCSUBSCRVEHICUL     vehicul, ";
%LET SQLQUERY = %SQLQUERY + "        vcfund              fundinvestor, ";
%LET SQLQUERY = %SQLQUERY + "        VCFUND              fund, ";
%LET SQLQUERY = %SQLQUERY + "        admrole ";
%LET SQLQUERY = %SQLQUERY + "  where fopsha.subscriber = subs.iqid ";
%LET SQLQUERY = %SQLQUERY + "  and fopsha.fundop = fundop.iqid ";
%LET SQLQUERY = %SQLQUERY + "  and fopsha.iqdeleted = 0 ";
%LET SQLQUERY = %SQLQUERY + "  and fundop.iqdeleted = 0 ";
%LET SQLQUERY = %SQLQUERY + "  and coalesce(fundop.draft, 0) = 0 ";
%LET SQLQUERY = %SQLQUERY + "  and fopsha.subscriber = subs.iqid ";
%LET SQLQUERY = %SQLQUERY + "  and fundop.fund = fund.iqid ";
%LET SQLQUERY = %SQLQUERY + "  and fopsha.fundshare = fshare.iqid ";
%LET SQLQUERY = %SQLQUERY + "  and subs.MAINVEHICULE = vehicul.IQID ";
%LET SQLQUERY = %SQLQUERY + "  and vehicul.FUND = fundinvestor.iqid ";
//%LET SQLQUERY = %SQLQUERY + "   and fundop.closedate = '31-dec-17' ";
%LET SQLQUERY = %SQLQUERY + "   and fundop.closedate = to_date('" & Format(%POSITION_DATE,"d/M/yyyy") &"','DD/MM/YYYY') ";
%LET SQLQUERY = %SQLQUERY + "   and admrole.iqid = fundinvestor.iqregionid ";
// We verify that the fund is an Investor Fund is a fund for which there is some accounting
%LET SQLQUERY = %SQLQUERY + "   and fundinvestor.iqid in (select fund from glentitychart where iqdeleted = 0 and fund is not null) ";
%LET SQLQUERY = %SQLQUERY + "   and fundinvestor.iqid like '%" & %FUND_IQID & "%' ";

// Apply the region filter
%LET SQLQUERY = %SQLQUERY + "   and fundinvestor.iqregionid like '%" & %REGION_IQID & "%' ";
// Apply the region filter based on the region
%LET SQLQUERY = %SQLQUERY + "   and EXISTS (SELECT 1 FROM ADMDYNROLE WHERE USERID='" & %USERID & "' AND READACCESS<>0 AND ROLEID = fundinvestor.iqregionid ) ";

%LET SQLQUERY = %SQLQUERY + "  group by fund.fund,fshare.libelle,fundinvestor.fund,fundinvestor.iqregionid,fundinvestor.currency1,admrole.name,fund.currency1 ";
%LET SQLQUERY = %SQLQUERY + "  having sum(coalesce(bookvalue, 0.0)) <> 0 ";

// Debug: Test Generated SQL Query
// PROC PRINT ; PUT %SQLQUERY ; RUN;

// Extract the data using SQL
PROC SQLIMPORT DATA=WORK.T_VALO_FUNDOP SQL=%SQLQUERY ;
RUN;

// Flag the records with ROW_NUMBER
DATA WORK.T_VALO_FUNDOP;
	 SET WORK.T_VALO_FUNDOP;

	 COLUMN ROW_NUMBER	TYPE=INTEGER;

	 ROW_NUMBER = NZ(LAG(ROW_NUMBER),0)+1;
	 OUTPUT;
RUN;

// Recalculate the nb of closed  positions
%LET NUMBER_VALORISATIONS  = 0;
PROC MEANS DATA=WORK.T_VALO_FUNDOP OUT=WORK.COUNT;
	 N ROW_NUMBER (NAME=COUNT_ALLOCATIONS);
RUN;

// Setup the ad-hoc variable
DATA WORK.COUNT;
	 SET WORK.COUNT;
	 %NUMBER_VALORISATIONS = COUNT_ALLOCATIONS;
RUN;

// Print a couple of records for tests
PROC PRINT ; PUT CSTR(%NUMBER_VALORISATIONS) & " have been found" ; RUN;
PROC PRINT DATA= WORK.T_VALO_FUNDOP	MAXROWS=10;Title "Valorisation "		; RUN;

// Prepare the empty structure for all the complementary tables
DATA T_VALO_FUNDOP  ;SET WORK.T_VALO_FUNDOP	;STOP;RUN;
