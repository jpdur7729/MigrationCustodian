// ------------------------------------------------------------------------------
//                     Author    : eFront-BP2S
//                     Time-stamp: "2018-09-03 08:13:23 jpdur"
// ------------------------------------------------------------------------------
                                                  
// Reusing the standard CalcEngine functionalities
%INCLUDE "P_GL_CHART_FUND";
%INCLUDE "P_GL_FISCDATE";
%INCLUDE "\\(Shared)\Standard datamart\BUILD_DATA";
                                 
LIBNAME Std_Output WORK;

// Reformat the data accordingly keep the columns to get the relevant data
DATA WORK.T_GL_CHART_OF_ACCOUNT(RENAME = (DEBIT2=DEBIT_CCY CREDIT2=CREDIT_CCY ACCOUNT_CURRENCY=TRANSAC_CURRENCY ));
	 SET Std_Output.FV_T_GL_CHART_OF_ACCOUNT (KEEP = ACCOUNT_IQID ACCOUNT_CLASS_NUMBER ACCOUNT ACCOUNT_CURRENCY DEBIT CREDIT DEBIT2 CREDIT2);

	 // 2 Extra columns
	 COLUMN ACCOUNT_NUMBER TYPE = STRING;
	 COLUMN LENGHT 		   TYPE = FLOAT;

	 // Position of the - in the account number
	 LENGHT = FIND(ACCOUNT,'-');

	 // Account Number is the account normalised in order to match FIA requirements
	 ACCOUNT_NUMBER = ACCOUNT ;

	 // ----------------------------------------------------------------------------------------------
	 // Rule: If not class4 or 5 we stop the account number at the 1st hyphen if it exists
	 // 	  for class4/5 after the 1st hyphen we get the currency which is kept for these accounts
	 // ----------------------------------------------------------------------------------------------
	 IF LENGHT <> 0 then
		IF ACCOUNT_CLASS_NUMBER <> '4' AND ACCOUNT_CLASS_NUMBER <> '5' THEN
		   ACCOUNT_NUMBER= LEFT (ACCOUNT,(FIND(ACCOUNT,'-')) - 1 );
	    ELSE
		   ACCOUNT_NUMBER= LEFT (ACCOUNT,(FIND(ACCOUNT,'-')) + 3);
		END;
	END;

	OUTPUT;
RUN;

// Print the result of the data       
PROC PRINT DATA = WORK.T_GL_CHART_OF_ACCOUNT; RUN;

// -------------------------------------------------------------------------------------------------
// As a result of the simplification of the account number we now have a situation by which
// different accounts have now been merge into one ==> We thus need to sum the balances accordingly
// -------------------------------------------------------------------------------------------------
DATA WORK.T_GL_OPENING_BALANCES (DROP = ACCOUNT_IQID LENGTH ACCOUNT ACCOUNT_CLASS_NUMBER) ;
	 SET WORK.T_GL_CHART_OF_ACCOUNT;
RUN;
                                
// Just suming the data together
PROC MEANS DATA=WORK.T_GL_OPENING_BALANCES OUT=WORK.T_OPENING_BALANCES;
	 CLASS ACCOUNT_NUMBER TRANSAC_CURRENCY;
	 SUM DEBIT  	(NAME=DEBIT		  LABEL="DEBIT" );                
	 SUM CREDIT 	(NAME=CREDIT  	  LABEL="CREDIT");                
	 SUM DEBIT_CCY  (NAME=DEBIT_CCY   LABEL="DEBIT_CCY" );            
	 SUM CREDIT_CCY (NAME=CREDIT_CCY  LABEL="CREDIT_CCY");            
RUN;

// For the sake of presentation sorting the table by account number
PROC SORT DATA=WORK.T_OPENING_BALANCES OUT=WORK.T_OPENING_BALANCES;
	 BY ACCOUNT_NUMBER;
RUN;
    
// Print the result of the data
PROC PRINT DATA = WORK.T_OPENING_BALANCES; RUN;
