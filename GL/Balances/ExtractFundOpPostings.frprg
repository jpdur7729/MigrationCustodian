// ------------------------------------------------------------------------------
//                     Author    : eFront-BP2S
//                     Time-stamp: "2018-09-24 15:45:18 jpdur"
// ------------------------------------------------------------------------------
              
// // // Default fund is Fund 1164
// %PARAM IQID_FUND	LABEL="Fund{F}Fonds" TYPE=STRING INFORMAT="??PICKID(VCFUND;FUND)" DEFAULT="91C4CBF79A324942AA5C4C859F53BE1C";
// %PARAM IQID_CHART 	LABEL = "Select General Ledger"
// 	   INFORMAT= "??PICKID(SELECT A.IQID, A.NAME FROM GLCHART A, GLENTITYCHART B WHERE ??FILTER AND (A.IQID = B.CHART) AND (A.IQDELETED=0) AND (B.IQDELETED=0) AND (B.FUND IN (?));{IQID_FUND})" NOTNULL;
// %PARAM DATE LABEL="Reference date" TYPE=DATE DEFAULT = "31/12/2017" NOTNULL;

LIBNAME ODIR "." ;

// Create the Query to extract the data
%LET SQLQUERY = %SQLQUERY + "select glaccount.accountno as AccountNumber, ";
%LET SQLQUERY = %SQLQUERY + "       glaccount.name      as AccountName, ";
%LET SQLQUERY = %SQLQUERY + "       fund.fund           as Fund, ";
%LET SQLQUERY = %SQLQUERY + "       fshare.libelle      as ShareClass, ";
%LET SQLQUERY = %SQLQUERY + "       subscr.libelle      as InvestorAccount, ";
%LET SQLQUERY = %SQLQUERY + "       glchart.name 		as GLChart, ";
%LET SQLQUERY = %SQLQUERY + "       glentry.refdate     as GLDate, ";
%LET SQLQUERY = %SQLQUERY + "       glentry.draft, ";
%LET SQLQUERY = %SQLQUERY + "       glentry.amount 		as Amount, ";
%LET SQLQUERY = %SQLQUERY + "       glentry.amount2		as Amount2, ";
// %LET SQLQUERY = %SQLQUERY + "       glentry.currency2 	as Currency2, ";
%LET SQLQUERY = %SQLQUERY + "       glentry.keyid1 		as FundIQID, ";
%LET SQLQUERY = %SQLQUERY + "       glentry.keyid2 		as IAIQID, ";
%LET SQLQUERY = %SQLQUERY + "       glentry.keyid3 		as FundOpIQID, ";
%LET SQLQUERY = %SQLQUERY + "       glentry.keyid4 		as ShareClassIQID, ";
// %LET SQLQUERY = %SQLQUERY + "       case when coalesce(glentry.amount,0)  <=0 then abs(glentry.amount)  else 0 end as Debit, ";
// %LET SQLQUERY = %SQLQUERY + "       case when coalesce(glentry.amount,0)  >=0 then abs(glentry.amount)  else 0 end as Crebit, ";
// %LET SQLQUERY = %SQLQUERY + "       case when coalesce(glentry.amount2,0) <=0 then abs(glentry.amount2) else 0 end as Debit2, ";
// %LET SQLQUERY = %SQLQUERY + "       case when coalesce(glentry.amount2,0) >=0 then abs(glentry.amount2) else 0 end as Crebit2, ";
%LET SQLQUERY = %SQLQUERY + "       glentry.currency2 as TransactionCurrency ";
%LET SQLQUERY = %SQLQUERY + "  from glentry, ";
%LET SQLQUERY = %SQLQUERY + "       glaccount, ";
%LET SQLQUERY = %SQLQUERY + "       glchart, ";
%LET SQLQUERY = %SQLQUERY + "       vcfund       fund, ";
%LET SQLQUERY = %SQLQUERY + "       vcfundshare  fshare, ";
%LET SQLQUERY = %SQLQUERY + "       vcsubscriber subscr ";
%LET SQLQUERY = %SQLQUERY + " where GLENTRY.ACCOUNT = GLACCOUNT.IQID ";
%LET SQLQUERY = %SQLQUERY + "   and GLACCOUNT.CHART = GLCHART.iqid ";
//%LET SQLQUERY = %SQLQUERY + "   and glchart.iqid = '01117DC6F3E14B6C961380419F7A4181' ";
%LET SQLQUERY = %SQLQUERY + "   and glchart.iqid like '%" & %IQID_CHART & "%' ";
%LET SQLQUERY = %SQLQUERY + "   and glchart.iqdeleted = 0 ";
%LET SQLQUERY = %SQLQUERY + "   and keyclass = 'FUNDOP' ";
%LET SQLQUERY = %SQLQUERY + "   and glentry.iqdeleted = 0 ";
%LET SQLQUERY = %SQLQUERY + "   and glentry.keyid1 = fund.iqid ";
%LET SQLQUERY = %SQLQUERY + "   and glentry.keyid4 = fshare.iqid ";
%LET SQLQUERY = %SQLQUERY + "   and glentry.keyid2 = subscr.iqid ";
//%LET SQLQUERY = %SQLQUERY + "   and glentry.refdate <= '31-Dec-17' ";
%LET SQLQUERY = %SQLQUERY + "   and glentry.refdate <= to_date('" & Format(%DATE,"d/M/yyyy") &"','DD/MM/YYYY') ";
%LET SQLQUERY = %SQLQUERY + "   order by glaccount.name,glaccount.accountno ";


// Debug to check the SQL generated
PROC PRINT; PUT %SQLQUERY; RUN;

// Extract into a Table
PROC SQLIMPORT DATA=WORK.FUNDOP_POSTINGS_DETAILS SQL=%SQLQUERY;
RUN;

// Normalise the account number according to the new FIA approach
DATA WORK.FUNDOP_POSTINGS_DETAILS;
	 SET WORK.FUNDOP_POSTINGS_DETAILS (RENAME=(ACCOUNTNUMBER=ACCOUNT));

	 // 3 Extra columns
	 COLUMN ACCOUNT_CLASS_NUMBER TYPE = STRING;
	 COLUMN ACCOUNT_NUMBER 		 TYPE = STRING;
	 COLUMN LENGHT 		   		 TYPE = FLOAT;

	 // Define the account class number
	 ACCOUNT_CLASS_NUMBER = MID(ACCOUNT_NUMBER,1,1) ;

	 // Position of the - in the account number
	 LENGHT = FIND(ACCOUNT,'-');

	 // Account Number is the account normalised in order to match FIA requirements
	 ACCOUNT_NUMBER = ACCOUNT ;

	 // ----------------------------------------------------------------------------------------------
	 // Rule: If not class4 or 5 we stop the account number at the 1st hyphen if it exists
	 // 	  for class4/5 after the 1st hyphen we get the currency which is kept for these accounts
	 // ----------------------------------------------------------------------------------------------
	 IF LENGHT <> 0 then
		IF ACCOUNT_CLASS_NUMBER <> '5' THEN
		   ACCOUNT_NUMBER= LEFT (ACCOUNT,(FIND(ACCOUNT,'-')) - 1 );
	    ELSE
		   ACCOUNT_NUMBER= LEFT (ACCOUNT,(FIND(ACCOUNT,'-')) + 3);
		END;
	END;

	OUTPUT;
RUN;


// Check the data obtained
PROC PRINT DATA=WORK.FUNDOP_POSTINGS_DETAILS MAXROWS=10; RUN;

// ----------------------------------------------------------------
// Consolidate the data per Investor Account/Share Class/Fund.
// As a result the date should be replaced by 31/12/2017
// ----------------------------------------------------------------
PROC MEANS DATA=WORK.FUNDOP_POSTINGS_DETAILS OUT=WORK.FUNDOP_POSTINGS ;
     CLASS ACCOUNT ACCOUNTNAME FUND SHARECLASS INVESTORACCOUNT GLCHART DRAFT FUNDIQID IAIQID FUNDOPIQID SHARECLASSIQID TRANSACTIONCURRENCY ACCOUNT_CLASS_NUMBER ACCOUNT_NUMBER LENGHT;
	 SUM AMOUNT  (LABEL="Amount"  NAME=AMOUNT) ;
	 SUM AMOUNT2 (LABEL="Amount2" NAME=AMOUNT2);
RUN;

// ------------------------------------------------------------------------------
// We add the date as the report date in the consolidation of all these postings
// ------------------------------------------------------------------------------
DATA WORK.FUNDOP_POSTINGS;
	SET WORK.FUNDOP_POSTINGS;

	COLUMN GLDATE TYPE=DATE;

	GLDATE = %DATE;
RUN;

// Check the data obtained for the consolidation
PROC PRINT DATA=WORK.FUNDOP_POSTINGS MAXROWS=10; RUN;

// Create the empty structure
DATA ODIR.FUNDOP_POSTINGS;
	 SET WORK.FUNDOP_POSTINGS;
	 STOP;
RUN;


