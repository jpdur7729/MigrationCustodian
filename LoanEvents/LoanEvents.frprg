// ------------------------------------------------------------------------------
//                     Author    : eFront-BP2S
//                     Time-stamp: "2018-08-29 15:24:58 jpdur"
// ------------------------------------------------------------------------------

LIBNAME USER ".";

// Use the region as a parameter E937EC949638464AB13C64160BC646C0 = Generic Region #193                                                                             
// %PARAM REGION_IQID LABEL="Region" INFORMAT="??PICKID(ADMROLE;NAME)" DEFAULT="00C148A60D2541F4A6DF45164B06983A" ;
%PARAM REGION_IQID LABEL="Region" INFORMAT="??PICKID(ADMROLE;NAME)" DEFAULT="E937EC949638464AB13C64160BC646C0" ;

// Let's Add the USERID of the user who created the allocation
%LET USERID = GetUserInfo(GetUserID(),"IQID1");

// Create the corresponding SQL Query
%LET SQLQUERY = %SQLQUERY + "select case substr(ins.shortname,1,1) ";
%LET SQLQUERY = %SQLQUERY + "         when '0' then '''' || ins.shortname ";
%LET SQLQUERY = %SQLQUERY + "         else ins.shortname ";
%LET SQLQUERY = %SQLQUERY + "       end as INSTRUMENT, ";
%LET SQLQUERY = %SQLQUERY + "       ins.currency1 as CURRENCY, ";
%LET SQLQUERY = %SQLQUERY + "       fund.fund as FUND_ISSUER, ";
%LET SQLQUERY = %SQLQUERY + "       issuer.name as CIE_ISSUER, ";
%LET SQLQUERY = %SQLQUERY + "       case l1.kind ";
%LET SQLQUERY = %SQLQUERY + "         when 'LINVCASH' then 'LNCASH' ";
%LET SQLQUERY = %SQLQUERY + "         when 'LCASH'    then 'LNCASH' ";
%LET SQLQUERY = %SQLQUERY + "         when 'LINVPIK'  then 'LNPIK' ";
%LET SQLQUERY = %SQLQUERY + "         when 'LPIK'     then 'LNPIK' ";
%LET SQLQUERY = %SQLQUERY + "         when 'BLPIK'    then 'LNPIK' ";
%LET SQLQUERY = %SQLQUERY + "       end as TYPE, ";
%LET SQLQUERY = %SQLQUERY + "       l1.kind as OldType, ";
%LET SQLQUERY = %SQLQUERY + "       l1.referenceindex as REFERENCE_INDEX, ";
%LET SQLQUERY = %SQLQUERY + "       l1.daysperyear as DAYS_YEAR_BASIS, ";
%LET SQLQUERY = %SQLQUERY + "       l1.baserate as BASE_RATE, ";
%LET SQLQUERY = %SQLQUERY + "       l1.ratestablepercent as PERCENTAGE_OF_TABLE_RATE, ";
%LET SQLQUERY = %SQLQUERY + "       l1.ratestable as RATES_TABLE, ";
%LET SQLQUERY = %SQLQUERY + "       l1.composedrate as DAILY_EQUIVALENT_RATE, ";
%LET SQLQUERY = %SQLQUERY + "       l1.rate as RATE_REPAYMENT, ";
%LET SQLQUERY = %SQLQUERY + "       l1.indexroundingstep as RATES_TABLE_ROUNDING_STEP, ";
%LET SQLQUERY = %SQLQUERY + "       l1.indexroundingtype as ROUNDING_TYPE, ";
%LET SQLQUERY = %SQLQUERY + "       l1.progressivrate as PROGRESSIVE_AMORTIZATION_RATE, ";
%LET SQLQUERY = %SQLQUERY + "       l1.fixingtype as FIXING_TYPE, ";
%LET SQLQUERY = %SQLQUERY + "       l1.ratefloor as FLOOR, ";
%LET SQLQUERY = %SQLQUERY + "       l1.floorratestablepct as PERCENTAGE_OF_FLOOR_TABLE, ";
// %LET SQLQUERY = %SQLQUERY + "       l1.floorratestable as FLOOR_RATES_TABLE, ";
%LET SQLQUERY = %SQLQUERY + "       floorbench.libelle as FLOOR_RATES_TABLE, ";
%LET SQLQUERY = %SQLQUERY + "       l1.ratecap as CAP, ";
%LET SQLQUERY = %SQLQUERY + "       l1.capratestablepct as PERCENTAGE_OF_CAP_TABLE, ";
// %LET SQLQUERY = %SQLQUERY + "       l1.capratestable as CAP_RATES_TABLE, ";
%LET SQLQUERY = %SQLQUERY + "       capbench.libelle as CAP_RATES_TABLE, ";
%LET SQLQUERY = %SQLQUERY + "       l1.firstdate as FIRST_DATE, ";
%LET SQLQUERY = %SQLQUERY + "       l1.lastdate as U_LAST_DATE_U_, ";
%LET SQLQUERY = %SQLQUERY + "       l1.firstinterestdate as FIRST_PAYMENT_DATE, ";
%LET SQLQUERY = %SQLQUERY + "       l1.lastinterestdate as LAST_PAYMENT_DATE, ";
%LET SQLQUERY = %SQLQUERY + "       l1.interestperiod as PERIOD, ";
%LET SQLQUERY = %SQLQUERY + "       l1.paymentcalendar as PAYMENT_CALENDAR, ";
%LET SQLQUERY = %SQLQUERY + "       l1.paymentdatetype as PAYMENT_DATE_TYPE, ";
%LET SQLQUERY = %SQLQUERY + "       l1.paymentdateoffset as PAYMENT_OFFSET, ";
%LET SQLQUERY = %SQLQUERY + "       l1.paymentdateoffsettype as OFFSET_IN_DAYS_MONTH, ";
%LET SQLQUERY = %SQLQUERY + "       l1.lastdayinterest as INTEREST_ON_LAST_DAY, ";
// Fields Added on Aug 29th
%LET SQLQUERY = %SQLQUERY + "       l1.explicitperiods as EXPLICIT_PERIOD, ";
%LET SQLQUERY = %SQLQUERY + "       'Yes' as ACCRUALS_ON_LAST_DAY ";
%LET SQLQUERY = %SQLQUERY + "  from vcinvestmentins ins ";
%LET SQLQUERY = %SQLQUERY + "    join vcinvestinsrate l1 ";
%LET SQLQUERY = %SQLQUERY + "  on ins.iqid = l1.investmentins ";
%LET SQLQUERY = %SQLQUERY + "       left join vcfund          fund ";
%LET SQLQUERY = %SQLQUERY + "       on ins.fund = fund.iqid ";
%LET SQLQUERY = %SQLQUERY + "       left join sfaaccount 		issuer ";
%LET SQLQUERY = %SQLQUERY + "       on ins.account = issuer.iqid ";
// Translate the name of the floor table and the cap table             
%LET SQLQUERY = %SQLQUERY + "       left join vcbenchmark floorbench ";
%LET SQLQUERY = %SQLQUERY + "       on l1.floorratestable = floorbench.iqid ";
%LET SQLQUERY = %SQLQUERY + "       left join vcbenchmark capbench ";
%LET SQLQUERY = %SQLQUERY + "       on l1.capratestable = capbench.iqid ";

%LET SQLQUERY = %SQLQUERY + " where accountins is null ";

// We need to check that the type of events is only the 2 types of events flagged
%LET SQLQUERY = %SQLQUERY + "   and l1.kind in ('LINVCASH','LINVPIK','LCASH','LPIK','BLPIK') ";

// Apply the region filter
%LET SQLQUERY = %SQLQUERY + "   and ins.iqregionid like '%" & %REGION_IQID & "%'";
// Apply the region filter based on the characteristics of the end-user
%LET SQLQUERY = %SQLQUERY + "   and EXISTS (SELECT 1 FROM ADMDYNROLE WHERE USERID='" & %USERID & "' AND READACCESS<>0 AND ROLEID = ins.iqregionid) ";

// Extract the data using SQL
PROC SQLIMPORT DATA=WORK.T_LOANEVENTS SQL=%SQLQUERY ;
RUN;                                                              
                                                                  
// Debug to check that data has been found                        
PROC PRINT DATA= WORK.T_LOANEVENTS MAXROWS=10;RUN;                
                                                                  
// Create the empty structures                                    
DATA T_LOANEVENTS; SET WORK.T_LOANEVENTS; STOP; RUN;              
                                                                  
                                                                  
