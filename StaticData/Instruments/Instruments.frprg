// ------------------------------------------------------------------------------
//                     Author    : eFront-BP2S
//                     Time-stamp: "2018-08-14 15:37:28 jpdur"
// ------------------------------------------------------------------------------

LIBNAME USER ".";

// Use the region as a parameter                                      
%PARAM REGION_IQID LABEL="Region" INFORMAT="??PICKID(ADMROLE;NAME)" DEFAULT="00C148A60D2541F4A6DF45164B06983A" ;

// Let's Add the USERID of the user who created the allocation
%LET USERID = GetUserInfo(GetUserID(),"IQID1");

// Create the corresponding SQL Query
%LET SQLQUERY = %SQLQUERY + "select ins.shortname as Libelle, ";
%LET SQLQUERY = %SQLQUERY + "       case code ";
%LET SQLQUERY = %SQLQUERY + "         when 'LINV' then ";
%LET SQLQUERY = %SQLQUERY + "          'Investment Loan' ";
%LET SQLQUERY = %SQLQUERY + "         when 'OS' then ";
%LET SQLQUERY = %SQLQUERY + "          'Equity' ";
%LET SQLQUERY = %SQLQUERY + "         when 'LOAN' then ";     
%LET SQLQUERY = %SQLQUERY + "          'Credit Facility Loan' ";
%LET SQLQUERY = %SQLQUERY + "         when 'BOND' then ";       
%LET SQLQUERY = %SQLQUERY + "          'Classic Bonds' ";
%LET SQLQUERY = %SQLQUERY + "       end as TranslatedCode, ";
%LET SQLQUERY = %SQLQUERY + "       fund.fund as FundIssuerName, ";
%LET SQLQUERY = %SQLQUERY + "       sfaaccount.name as IssuerCieName, ";
%LET SQLQUERY = %SQLQUERY + "       ins.currency1 as Currency, ";
%LET SQLQUERY = %SQLQUERY + "       admrole.name as Region, ";
%LET SQLQUERY = %SQLQUERY + "       case coalesce(ins.userbool1, 0) ";
%LET SQLQUERY = %SQLQUERY + "         when 0 then ";
%LET SQLQUERY = %SQLQUERY + "          'No' ";
%LET SQLQUERY = %SQLQUERY + "         else ";
%LET SQLQUERY = %SQLQUERY + "          'Yes' ";
%LET SQLQUERY = %SQLQUERY + "       end as RegulatedMarket, ";
%LET SQLQUERY = %SQLQUERY + "       coalesce(ins.usernum1, 1) as nominal, ";
%LET SQLQUERY = %SQLQUERY + "       ins.libelle as CompleteName ";
%LET SQLQUERY = %SQLQUERY + "       ,ins.isin ";
%LET SQLQUERY = %SQLQUERY + "       ,case ins.usertext10 ";
%LET SQLQUERY = %SQLQUERY + "             when 'LT' then 'Long Term Holding' ";
%LET SQLQUERY = %SQLQUERY + "             when 'ST' then 'Short Term Holding' ";
%LET SQLQUERY = %SQLQUERY + "       end as AccountingClassif ";
%LET SQLQUERY = %SQLQUERY + "       ,ins.country ";
// %LET SQLQUERY = %SQLQUERY + "       -- ,ins.costcalcmethod -- Is it useful ?? populated only for 3 instruments ";
%LET SQLQUERY = %SQLQUERY + "  from vcinvestmentins ins ";
%LET SQLQUERY = %SQLQUERY + "  left join vcfund fund ";
%LET SQLQUERY = %SQLQUERY + "    on ins.fund = fund.iqid ";
%LET SQLQUERY = %SQLQUERY + "  left join sfaaccount ";
%LET SQLQUERY = %SQLQUERY + "    on ins.account = sfaaccount.iqid ";
%LET SQLQUERY = %SQLQUERY + "  left join admrole ";
%LET SQLQUERY = %SQLQUERY + "    on ins.iqregionid = admrole.iqid ";
%LET SQLQUERY = %SQLQUERY + "  left join vcinvestinstype ";
%LET SQLQUERY = %SQLQUERY + "    on ins.investinstype = vcinvestinstype.iqid ";
%LET SQLQUERY = %SQLQUERY + " where ins.accountins is null ";
%LET SQLQUERY = %SQLQUERY + "   and vcinvestinstype.code in ('LINV', 'OS', 'LOAN') ";
%LET SQLQUERY = %SQLQUERY + "   and ins.iqdeleted = 0 ";
// Filter out all instruments for which  there is non transactions
%LET SQLQUERY = %SQLQUERY + "and ins.iqid not in ( ";
%LET SQLQUERY = %SQLQUERY + "select ins.iqid ";
%LET SQLQUERY = %SQLQUERY + "from vcinvestmentins ins, vcinvestmentins ins2, vcinvestinstype  where ins.accountins is null ";
%LET SQLQUERY = %SQLQUERY + "and ins.iqdeleted = 0 and ins2.accountins = ins.iqid ";
%LET SQLQUERY = %SQLQUERY + "and ins.investinstype = vcinvestinstype.iqid and vcinvestinstype.code in ('LINV', 'OS', 'LOAN') ";
%LET SQLQUERY = %SQLQUERY + "and ins2.iqid not in (select distinct investmentins from vcinvestmentop where ";
%LET SQLQUERY = %SQLQUERY + "iqdeleted = 0 and coalesce(draft,0) = 0 and coalesce(cancelled,0)  = 0 )) ";

// Apply the region filter
%LET SQLQUERY = %SQLQUERY + "   and ins.iqregionid like '%" & %REGION_IQID & "%'";
// Apply the region filter based on the characteristics of the end-user
%LET SQLQUERY = %SQLQUERY + "   and EXISTS (SELECT 1 FROM ADMDYNROLE WHERE USERID='" & %USERID & "' AND READACCESS<>0 AND ROLEID = ins.iqregionid) ";


// Extract the data using SQL
PROC SQLIMPORT DATA=WORK.T_INSTRUMENTS SQL=%SQLQUERY ;
RUN;

// Let's flag the records from 1 ...
DATA WORK.T_INSTRUMENTS;
	 SET WORK.T_INSTRUMENTS;

	 COLUMN ROW_NUMBER	TYPE=INTEGER;

	 ROW_NUMBER = NZ(LAG(ROW_NUMBER),0)+1;
	 OUTPUT;
RUN;

// Let's print the number of records
%LET NUMBER_RECORDS  = 0;
PROC MEANS DATA=WORK.T_INSTRUMENTS OUT=WORK.COUNT;
	 N ROW_NUMBER (NAME=COUNT_ALLOCATIONS);
RUN;

// Setup the ad-hoc variable
DATA WORK.COUNT;
	 SET WORK.COUNT;
	 %NUMBER_RECORDS = COUNT_ALLOCATIONS;
RUN;

// Print the number of records
PROC PRINT ; 
PUT "Nb Instruments " & CSTR(%NUMBER_RECORDS) ; 
RUN;

PROC PRINT DATA= WORK.T_INSTRUMENTS MAXROWS=10;RUN;

DATA T_INSTRUMENTS;
SET  WORK.T_INSTRUMENTS;
STOP;
RUN;

// ----------------------------------------------------------------------------------------------------------------------------
// Split the instrument tables in 2 tables so that an extract can actually be made easily in order to generate 2 spreadsheets
// ----------------------------------------------------------------------------------------------------------------------------
DATA WORK.T_INSTRUMENTS1;
SET WORK.T_INSTRUMENTS (where ROW_NUMBER <= 65534) ; 
RUN;
DATA WORK.T_INSTRUMENTS2;
SET WORK.T_INSTRUMENTS (where ROW_NUMBER > 65534) ; 
RUN;

// Create the empty structure 
DATA T_INSTRUMENTS1;
SET WORK.T_INSTRUMENTS1;
STOP;
RUN;
DATA T_INSTRUMENTS2;
SET WORK.T_INSTRUMENTS2;
STOP;
RUN;








