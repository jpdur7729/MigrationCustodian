// ------------------------------------------------------------------------------
//                     Author    : eFront-BP2S
//                     Time-stamp: "2018-08-14 08:27:30 jpdur"
// ------------------------------------------------------------------------------
                                              
LIBNAME USER ".";                             
                                              
// Use the region as a parameter ==> Default region "Generic Region #4" with the max number of records                                      
%PARAM REGION_IQID LABEL="Region" INFORMAT="??PICKID(ADMROLE;NAME)" DEFAULT="00C148A60D2541F4A6DF45164B06983A" ;

// Let's Add the USERID of the user who created the allocation
%LET USERID = GetUserInfo(GetUserID(),"IQID1");

// Prepare the SQL query to extract the Direct Investors
%LET SQLQUERY = %SQLQUERY + "select coalesce(x.libelle, ";
%LET SQLQUERY = %SQLQUERY + "                coalesce(fund.fund, sfaaccount.name) || '->' || ";
%LET SQLQUERY = %SQLQUERY + "                coalesce(y.FundIssuerName, y.IssuerCieName)) as Details, ";
%LET SQLQUERY = %SQLQUERY + "       sfaaccount.name as InvestorCie, ";
%LET SQLQUERY = %SQLQUERY + "       fund.fund as InvestorFund, ";
%LET SQLQUERY = %SQLQUERY + "       y.IssuerCieName as InvesteeCie, ";
%LET SQLQUERY = %SQLQUERY + "       y.FundIssuerName as InvesteeFund, ";
%LET SQLQUERY = %SQLQUERY + "       'Limited Partner' as Type, ";
%LET SQLQUERY = %SQLQUERY + "       admrole.name as Region, ";
%LET SQLQUERY = %SQLQUERY + "       x.startdate as FirstInvestDate ";
%LET SQLQUERY = %SQLQUERY + "  from (select ins.iqid          as InstruIQID, ";
%LET SQLQUERY = %SQLQUERY + "               ins.shortname, ";
%LET SQLQUERY = %SQLQUERY + "               ins.accountins, ";
%LET SQLQUERY = %SQLQUERY + "               invest.iqid       as InvestIQID, ";
%LET SQLQUERY = %SQLQUERY + "               invest.firm, ";
%LET SQLQUERY = %SQLQUERY + "               invest.fund, ";
%LET SQLQUERY = %SQLQUERY + "               invest.iqregionid, ";
%LET SQLQUERY = %SQLQUERY + "               invest.startdate, ";
%LET SQLQUERY = %SQLQUERY + "               invest.libelle ";
%LET SQLQUERY = %SQLQUERY + "          from vcinvestmentins ins, vcinvestment invest ";
%LET SQLQUERY = %SQLQUERY + "         where ins.investment = invest.iqid ";
%LET SQLQUERY = %SQLQUERY + "           and accountins is not null ";
%LET SQLQUERY = %SQLQUERY + "           and invest.iqdeleted = 0 ";
%LET SQLQUERY = %SQLQUERY + "           and ins.iqdeleted = 0) x ";
%LET SQLQUERY = %SQLQUERY + "  left join vcfund fund ";
%LET SQLQUERY = %SQLQUERY + "    on x.fund = fund.iqid ";
%LET SQLQUERY = %SQLQUERY + "  left join sfaaccount ";
%LET SQLQUERY = %SQLQUERY + "    on x.firm = sfaaccount.iqid ";
%LET SQLQUERY = %SQLQUERY + "  left join admrole ";
%LET SQLQUERY = %SQLQUERY + "    on x.iqregionid = admrole.iqid ";
%LET SQLQUERY = %SQLQUERY + "  join (select ins.iqid, ";
%LET SQLQUERY = %SQLQUERY + "               accountins, ";
%LET SQLQUERY = %SQLQUERY + "               ins.shortname, ";
%LET SQLQUERY = %SQLQUERY + "               ins.fund        as FundIqid, ";
%LET SQLQUERY = %SQLQUERY + "               fund.fund       as FundIssuerName, ";
%LET SQLQUERY = %SQLQUERY + "               ins.account     as AccountIQID, ";
%LET SQLQUERY = %SQLQUERY + "               sfaaccount.name as IssuerCieName ";
%LET SQLQUERY = %SQLQUERY + "          from vcinvestmentins ins ";
%LET SQLQUERY = %SQLQUERY + "          left join vcfund fund ";
%LET SQLQUERY = %SQLQUERY + "            on ins.fund = fund.iqid ";
%LET SQLQUERY = %SQLQUERY + "          left join sfaaccount ";
%LET SQLQUERY = %SQLQUERY + "            on ins.account = sfaaccount.iqid ";
%LET SQLQUERY = %SQLQUERY + "         where accountins is null) y ";
%LET SQLQUERY = %SQLQUERY + "    on x.accountins = y.iqid ";

// Restrict the region as entered as parameter
%LET SQLQUERY = %SQLQUERY + " where x.iqregionid like '%" & %REGION_IQID & "%'";
// Apply the region filter based on the characteristics of the end-user
%LET SQLQUERY = %SQLQUERY + "   and EXISTS (SELECT 1 FROM ADMDYNROLE WHERE USERID='" & %USERID & "' AND READACCESS<>0 AND ROLEID = x.iqregionid) ";

// Extract the data using SQL
PROC SQLIMPORT DATA=WORK.T_DIRECT_INVESTORS SQL=%SQLQUERY ;
RUN;

// -------------------------------------------------------------------------------------------
// Let's flag the records from 1 ... as the number of records for Generic Region #4 is >65536
// -------------------------------------------------------------------------------------------
DATA WORK.T_DIRECT_INVESTORS;
	 SET WORK.T_DIRECT_INVESTORS;

	 COLUMN ROW_NUMBER	TYPE=INTEGER;

	 ROW_NUMBER = NZ(LAG(ROW_NUMBER),0)+1;
	 OUTPUT;
RUN;

// Let's print the number of records
%LET NUMBER_RECORDS  = 0;
PROC MEANS DATA=WORK.T_DIRECT_INVESTORS OUT=WORK.COUNT;
	 N ROW_NUMBER (NAME=COUNT_ALLOCATIONS);
RUN;

// Setup the ad-hoc variable
DATA WORK.COUNT;
	 SET WORK.COUNT;
	 %NUMBER_RECORDS = COUNT_ALLOCATIONS;
RUN;

// Print the number of records
PROC PRINT ;
PUT "Nb Direct Investors " & CSTR(%NUMBER_RECORDS) ;
RUN;                    
                        
// Print a couple of records for tests
PROC PRINT DATA= WORK.T_DIRECT_INVESTORS MAXROWS=10;RUN;
                        
// ----------------------------------------------------------------------------------------------------------------------------
// Split the instrument tables in 2 tables so that an extract can actually be made easily in order to generate 2 spreadsheets
// ----------------------------------------------------------------------------------------------------------------------------
DATA WORK.T_DIRECT_INVESTORS1;
SET WORK.T_DIRECT_INVESTORS (where ROW_NUMBER <= 65534) ;
RUN;
DATA WORK.T_DIRECT_INVESTORS2;
SET WORK.T_DIRECT_INVESTORS (where ROW_NUMBER > 65534) ;
RUN;

// Create the empty structures
DATA T_DIRECT_INVESTORS1;
SET WORK.T_DIRECT_INVESTORS1;
STOP;
RUN;
DATA T_DIRECT_INVESTORS2;
SET WORK.T_DIRECT_INVESTORS2;
STOP;
RUN;
